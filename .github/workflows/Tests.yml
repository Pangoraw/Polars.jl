name: Run Tests

on:
  push:
    branches:
      - main

# This action needs permission to write the exported HTML file to the gh-pages branch.
permissions:
    contents: write
    # (all other permission fields default to "none")

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4
      - name: Build libpolars
        run: cargo build --verbose
        working-directory: ./c-polars
      - uses: julia-actions/setup-julia@v2
        with:
          version: "1"
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-runtest@v1
        with:
          coverage: false

      # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.
      - name: Set up notebook state cache
        uses: actions/cache@v4
        with:
          path: pluto_state_cache
          key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('**/*jl') }}
          restore-keys: |
              ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}

      - name: Run & export Pluto notebooks
        run: |
          julia -e 'using Pkg
            Pkg.activate(mktempdir())
            Pkg.add([
              Pkg.PackageSpec(name="PlutoSliderServer", version="1"),
            ])

            import PlutoSliderServer

            PlutoSliderServer.github_action("./docs";
              Export_cache_dir="pluto_state_cache",
              Export_baked_notebookfile=false,
              Export_baked_state=false,
              # more parameters can go here
            )'

      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            branch: gh-pages
            folder: .
            single-commit: true
